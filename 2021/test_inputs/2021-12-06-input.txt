
import numpy as np

def count_fish_population(fish):
  fish_pop = []
  for i in range(9):
    fish_pop += [(fish == i).sum()]
  return fish_pop

# starting_fish = np.array([3,4,3,1,2])
starting_fish = np.array([5,1,4,1,5,1,1,5,4,4,4,4,5,1,2,2,1,3,4,1,1,5,1,5,2,2,2,2,1,4,2,4,3,3,3,3,1,1,1,4,3,4,3,1,2,1,5,1,1,4,3,3,1,5,3,4,1,1,3,5,2,4,1,5,3,3,5,4,2,2,3,2,1,1,4,1,2,4,4,2,1,4,3,3,4,4,5,3,4,5,1,1,3,2,5,1,5,1,1,5,2,1,1,4,3,2,5,2,1,1,4,1,5,5,3,4,1,5,4,5,3,1,1,1,4,5,3,1,1,1,5,3,3,5,1,4,1,1,3,2,4,1,3,1,4,5,5,1,4,4,4,2,2,5,5,5,5,5,1,2,3,1,1,2,2,2,2,4,4,1,5,4,5,2,1,2,5,4,4,3,2,1,5,1,4,5,1,4,3,4,1,3,1,5,5,3,1,1,5,1,1,1,2,1,2,2,1,4,3,2,4,4,4,3,1,1,1,5,5,5,3,2,5,2,1,1,5,4,1,2,1,1,1,1,1,2,1,1,4,2,1,3,4,2,3,1,2,2,3,3,4,3,5,4,1,3,1,1,1,2,5,2,4,5,2,3,3,2,1,2,1,1,2,5,3,1,5,2,2,5,1,3,3,2,5,1,3,1,1,3,1,1,2,2,2,3,1,1,4,2])

transition_matrix = np.zeros((9,9))

for i in range(9):
  try:
    transition_matrix[i+1,i] = 1
  except:
    pass
transition_matrix[0,8] = 1 
transition_matrix[0,6] = 1 

print("Transition matrix")
print(transition_matrix)

fish = np.array(count_fish_population(starting_fish))

print("Starting fish")
print(fish)
days = 256

for i in range(1,days + 1):
  fish = np.matmul(fish,transition_matrix)
  if (i % 10 == 0) or (i == days):
    print(f"After {i} days: {fish.sum()}")


